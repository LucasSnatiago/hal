# MIT License
#
# Copyright(c) 2011-2019 The Maintainers of Nanvix
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

#===============================================================================
# Toolchain Configuration
#===============================================================================

# Compiler Options.
export CFLAGS  += -std=c99 -fno-builtin
export CFLAGS  += -Wall -Wextra -Werror -Wa,--warn
export CFLAGS  += -Winit-self -Wswitch-default -Wfloat-equal
export CFLAGS  += -Wundef -Wshadow -Wuninitialized -Wlogical-op
export CFLAGS  += -fno-stack-protector
export CFLAGS  += -Wvla # -Wredundant-decls
export CFLAGS  += -I $(INCDIR)
ifeq ($(RELEASE), true)
	export CFLAGS  += -O3 -D NDEBUG
else
	export CFLAGS  += -O0 -g -Wno-unused-function
endif

# Archiver Options
export ARFLAGS = rc

#===============================================================================

# Conflicts
.PHONY: hal
.PHONY: test

# Builds everything.
all: test

# Cleans compilation files.
distclean: distclean-hal distclean-test

# User-level testing units.
test: hal
	@$(MAKE) -C test

# Builds the hal.
hal:
	@$(MAKE) -C hal all

# Cleans hal compilation files.
distclean-hal:
	@$(MAKE) -C hal clean

# Cleans user-level testing units compilation files.
distclean-test:
	@$(MAKE) -C test clean
