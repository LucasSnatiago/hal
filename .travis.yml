#
# MIT License
#
# Copyright(c) 2011-2019 The Maintainers of Nanvix
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

sudo: required

language: C

services:
- docker

env:
  global:
      - MOUNT_DIR=/root/nanvix/hal
      - SSH_KEY=ssh/travis_rsa.enc
      - SSH_CONFIG=ssh/config
      - SERVER_NAME=mppa

jobs:
  include:
    # Build Debug
    - stage: "Build Debug"
      name: "QEMU OpenRISC"
      script: docker run -v"$(pwd):$MOUNTDIR/hal" -p4567:4567 nanvix/toolchain-openrisc /bin/sh -c "cd $MOUNTDIR/hal && export TARGET=qemu-openrisc && export TOOLCHAIN_DIR=/root/toolchain/or1k/bin && make distclean && make all"
    - stage: "Build Debug"
      name: "OpTiMSoC"
      script: docker run -v"$(pwd):$MOUNTDIR/hal" -p4567:4567 nanvix/toolchain-openrisc /bin/sh -c "cd $MOUNTDIR/hal && export TARGET=optimsoc && export TOOLCHAIN_DIR=/root/toolchain/or1k/bin && make distclean && make all"
    - stage: "Build Debug"
      name: "QEMU x86"
      script: docker run -v"$(pwd):$MOUNTDIR/hal" -p4567:4567 nanvix/toolchain-i486 /bin/sh -c "cd $MOUNTDIR/hal && export TARGET=qemu-x86 && export TOOLCHAIN_DIR=/root/toolchain/i486/bin && make distclean && make all"
    - stage: "Build Debug"
      name: "QEMU RISC-V 32-Bit"
      script: docker run -v"$(pwd):$MOUNTDIR/hal" -p4567:4567 nanvix/toolchain-riscv32 /bin/sh -c "cd $MOUNTDIR/hal && export TARGET=qemu-riscv32 && export TOOLCHAIN_DIR=/root/toolchain/riscv32/bin && make distclean && make all"
    - stage: "Build Debug"
      name: "MPPA-256"
      if: (NOT type IN (pull_request))
      before_script:
        - openssl aes-256-cbc -K $encrypted_b4131d7a7a41_key -iv $encrypted_b4131d7a7a41_iv -in $SSH_KEY -out travis_rsa -d
        - eval "$(ssh-agent -s)"
        - chmod 600 travis_rsa
        - cp $SSH_CONFIG ~/.ssh/config
        - ssh-add travis_rsa
      script:
        - rsync -avz --delete-after --exclude=".git" . $SERVER_NAME:~/travis/hal
        - ssh $SERVER_NAME 'bash travis/build-hal.sh --no-verbose --debug'
    - stage: "Build Debug"
      name: "UNIX64"
      script: docker run -v"$(pwd):$MOUNTDIR/hal" -p4567:4567 nanvix/unix64 /bin/sh -c "cd hal && export TARGET=unix64 && make distclean && make all"


    # Build Release
    - stage: "Build Release"
      name: "QEMU OpenRISC"
      script: docker run -v"$(pwd):$MOUNTDIR/hal" -p4567:4567 nanvix/toolchain-openrisc /bin/sh -c "cd $MOUNTDIR/hal && export TARGET=qemu-openrisc && export TOOLCHAIN_DIR=/root/toolchain/or1k/bin && export RELEASE=true && make distclean && make all"
    - stage: "Build Release"
      name: "OpTiMSoC"
      script: docker run -v"$(pwd):$MOUNTDIR/hal" -p4567:4567 nanvix/toolchain-openrisc /bin/sh -c "cd $MOUNTDIR/hal && export TARGET=optimsoc && export TOOLCHAIN_DIR=/root/toolchain/or1k/bin && export RELEASE=true && make distclean && make all"
    - stage: "Build Release"
      name: "QEMU x86"
      script: docker run -v"$(pwd):$MOUNTDIR/hal" -p4567:4567 nanvix/toolchain-i486 /bin/sh -c "cd $MOUNTDIR/hal && export TARGET=qemu-x86 && export TOOLCHAIN_DIR=/root/toolchain/i486/bin && export RELEASE=true && make distclean && make all"
    - stage: "Build Release"
      name: "QEMU RISC-V 32-Bit"
      script: docker run -v"$(pwd):$MOUNTDIR/hal" -p4567:4567 nanvix/toolchain-riscv32 /bin/sh -c "cd $MOUNTDIR/hal && export TARGET=qemu-riscv32 && export TOOLCHAIN_DIR=/root/toolchain/riscv32/bin && export RELEASE=true && make distclean && make all"
    - stage: "Build Release"
      name: "MPPA-256"
      if: (NOT type IN (pull_request))
      before_script:
        - openssl aes-256-cbc -K $encrypted_b4131d7a7a41_key -iv $encrypted_b4131d7a7a41_iv -in $SSH_KEY -out travis_rsa -d
        - eval "$(ssh-agent -s)"
        - chmod 600 travis_rsa
        - cp $SSH_CONFIG ~/.ssh/config
        - ssh-add travis_rsa
      script:
        - rsync -avz --delete-after --exclude=".git" . $SERVER_NAME:~/travis/hal
        - ssh $SERVER_NAME 'bash travis/build-hal.sh --no-verbose --release'
    - stage: "Build Release"
      name: "UNIX64"
      script: docker run -v"$(pwd):$MOUNTDIR/hal" -p4567:4567 nanvix/unix64 /bin/sh -c "cd hal && export TARGET=unix64 && export RELEASE=true && make distclean && make all"

    # Tests Debug
    - stage: "Tests Debug"
      name: "QEMU OpenRISC"
      script: docker run -v"$(pwd):$MOUNTDIR/hal" -p4567:4567 nanvix/toolchain-openrisc /bin/sh -c "cd $MOUNTDIR/hal && export TARGET=qemu-openrisc && export TOOLCHAIN_DIR=/root/toolchain/or1k/bin && make distclean && make all && make test-ccluster"
    - stage: "Tests Debug"
      name: "UNIX64"
      script: docker run -v"$(pwd):$MOUNTDIR/hal" -p4567:4567 nanvix/unix64 /bin/sh -c "cd hal && export TARGET=unix64 && make distclean && make all && make test-ccluster"

    # Tests Release
    - stage: "Tests Release"
      name: "QEMU OpenRISC"
      script: docker run -v"$(pwd):$MOUNTDIR/hal" -p4567:4567 nanvix/toolchain-openrisc /bin/sh -c "cd $MOUNTDIR/hal && export TARGET=qemu-openrisc && export RELEASE=true && export TOOLCHAIN_DIR=/root/toolchain/or1k/bin && make distclean && make all && make test-ccluster"
    - stage: "Tests Release"
      name: "UNIX64"
      script: docker run -v"$(pwd):$MOUNTDIR/hal" -p4567:4567 nanvix/unix64 /bin/sh -c "cd hal && export TARGET=unix64 && export RELEASE=true && make distclean && make all && make test-ccluster"

notifications:
  slack: nanvix:31ePVjsrXynUajPUDqy6I0hp
